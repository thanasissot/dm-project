#FROM node:18.19.0 as build
#
#WORKDIR /app
#
#COPY package*.json ./
#
#RUN npm install
#
#RUN npm install -g @angular/cli
#
##COPY . .
#
#COPY . /app
#
#RUN ng build --configuration=production
#
#CMD ng serve --configuration=production --host 0.0.0.0 --port 8080 --disable-host-check

FROM node:18.19.0 as build

WORKDIR /app

COPY package*.json ./

RUN npm install

RUN npm install -g @angular/cli

COPY . .

RUN ng build --configuration=production

FROM nginx:latest

COPY nginx.conf /etc/nginx/conf.d/default.conf

COPY --from=build app/dist/consumer/browser /usr/share/nginx/html

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]


#
#
##FROM nginx:latest
#
##COPY --from=build app/dist/consumer /usr/share/nginx/html
##
##EXPOSE 80

#Download Node Alpine image
#FROM node:21 As build
#
##Setup the working directory
#WORKDIR /usr/src/app
#
##Copy package.json
#COPY package.json ./
#COPY package-lock.json ./
#
##Install dependencies
#RUN npm install
#
##Copy other files and folder to working directory
#COPY docker .
#
##Build Angular application in PROD mode
#RUN npm run build --prod
#
##Download NGINX Image
#FROM nginx:alpine
#
##Copy built angular app files to NGINX HTML folder
#COPY --from=build /usr/src/app/dist/consumer/ /usr/share/nginx/html

#FROM node:alpine
#
#WORKDIR /usr/src/app
#
#COPY . /usr/src/app
#
#RUN npm install -g @angular/cli --loglevel verbose
#
#RUN npm install
#
#CMD ["ng", "serve", "--host", "0.0.0.0"]

#FROM node:20-alpine as build
#WORKDIR /app
#
## Copy necessary files for dependency installation
#COPY package.json package-lock.json angular.json ./
#
## Install the Angular CLI
#RUN npm install -g @angular/cli  --loglevel verbose
#
## Install Yarn package manager
#RUN apk add yarn
#
## Install project dependencies using Yarn
#RUN yarn install
#
## Copy the entire application to the container
#COPY . .
#
## Build the Angular app with production configuration
#RUN ng build --configuration=production
#
## Stage 2: Create a new image with a smaller base image (NGINX)
#FROM nginx:1.25.3-alpine-slim
#
## Copy the NGINX configuration file to the appropriate location
#COPY nginx.conf /etc/nginx/nginx.conf
#
## Copy the built Angular app from the 'calipharma' image to the NGINX HTML directory
#COPY --from=build /app/dist/customer /usr/share/nginx/html
#
## Specify the command to run NGINX in the foreground
#CMD ["nginx", "-g", "daemon off;"]
